import { Project } from "@/app/_types/types";

export const fullStackCMS: Project = {
  id: "full-stack-cms",
  title: "Full Stack Content Management System",
  description: {
    en: "A comprehensive content management system with Express.js backend API and Next.js frontend, featuring topic management, user authentication, and automated backups.",
    ar: "نظام شامل لإدارة المحتوى مع واجهة برمجة خلفية Express.js وواجهة أمامية Next.js، يتميز بإدارة المواضيع، ومصادقة المستخدمين، والنسخ الاحتياطي التلقائي.",
  },
  fullDescription: {
    en: "A modern, full-stack content management system built with Express.js and Next.js. The backend provides robust API endpoints with MongoDB database, while the frontend offers a responsive user interface with dark mode and multi-language support. The system includes advanced features like role-based access control, automated backups, and rich media support.",
    ar: "نظام حديث متكامل لإدارة المحتوى مبني باستخدام Express.js و Next.js. توفر الواجهة الخلفية نقاط نهاية API قوية مع قاعدة بيانات MongoDB، بينما تقدم الواجهة الأمامية واجهة مستخدم متجاوبة مع دعم الوضع المظلم وتعدد اللغات. يتضمن النظام ميزات متقدمة مثل التحكم في الوصول القائم على الأدوار، والنسخ الاحتياطي التلقائي، ودعم الوسائط المتعددة.",
  },
  image: "/projects/project-12/pr12.png",
  technologies: [
    "Express.js",
    "MongoDB",
    "Mongoose",
    "JWT",
    "PM2",
    "Next.js",
    "React",
    "TypeScript",
    "Tailwind CSS",
    "TipTap Editor",
  ],
  liveUrl: "https://xn--mgbaib7ak6lgt.com/",
  features: {
    en: [
      "JWT-based authentication with role-based access control",
      "Password reset functionality with email notifications",
      "User profiles with statistics and activity tracking",
      "Topic management with nested relationships",
      "Rich text editor with image and video support",
      "Comments system with moderation",
      "Like/Dislike functionality and view counting",
      "Content reporting system",
      "Automated daily database backups",
      "Multi-language support (Arabic/English) with RTL",
      "Dark mode support with responsive design",
      "Social sharing integration",
      "Server-side rendering with Next.js",
      "Custom components using Radix UI",
      "Comprehensive API documentation",
      "Advanced security features including CORS and XSS protection",
    ],
    ar: [
      "نظام مصادقة JWT مع التحكم في الوصول القائم على الأدوار",
      "وظيفة إعادة تعيين كلمة المرور مع إشعارات البريد الإلكتروني",
      "ملفات المستخدمين مع إحصائيات وتتبع النشاط",
      "إدارة المواضيع مع العلاقات المتداخلة",
      "محرر نصوص غني مع دعم الصور والفيديو",
      "نظام التعليقات مع الإشراف",
      "وظيفة الإعجاب/عدم الإعجاب وعد المشاهدات",
      "نظام الإبلاغ عن المحتوى",
      "نسخ احتياطي يومي تلقائي لقاعدة البيانات",
      "دعم تعدد اللغات (العربية/الإنجليزية) مع RTL",
      "دعم الوضع المظلم مع تصميم متجاوب",
      "تكامل المشاركة الاجتماعية",
      "تقديم من جانب الخادم مع Next.js",
      "مكونات مخصصة باستخدام Radix UI",
      "توثيق شامل لـ API",
      "ميزات أمان متقدمة تشمل CORS وحماية XSS",
    ],
  },
  team: {
    en: "Individual Project",
    ar: "مشروع فردي",
  },
  duration: {
    en: "Ongoing",
    ar: "قيد التطوير",
  },
  screenshots: [
    "/projects/project-12/pr12-1.png",
    "/projects/project-12/pr12-2.png",
    "/projects/project-12/pr12-3.png",
    "/projects/project-12/pr12-4.png",
  ],
  challenges: {
    en: [
      "Implementing seamless integration between Express.js backend and Next.js frontend",
      "Creating a unified authentication system across the full stack",
      "Managing complex state with multiple user roles and permissions",
      "Implementing bilingual support with RTL capabilities",
      "Setting up automated backup system with restoration features",
      "Ensuring consistent data flow and error handling between frontend and backend",
      "Optimizing performance for large-scale content management",
    ],
    ar: [
      "تنفيذ تكامل سلس بين الواجهة الخلفية Express.js والواجهة الأمامية Next.js",
      "إنشاء نظام مصادقة موحد عبر النظام بأكمله",
      "إدارة الحالة المعقدة مع أدوار وصلاحيات المستخدمين المتعددة",
      "تنفيذ دعم ثنائي اللغة مع إمكانيات RTL",
      "إعداد نظام نسخ احتياطي تلقائي مع ميزات الاستعادة",
      "ضمان تدفق البيانات المتسق ومعالجة الأخطاء بين الواجهة الأمامية والخلفية",
      "تحسين الأداء لإدارة المحتوى على نطاق واسع",
    ],
  },
  solutions: {
    en: [
      "Developed a robust API architecture with comprehensive documentation",
      "Implemented JWT-based authentication with secure cookie handling",
      "Created custom hooks and context providers for state management",
      "Used Next.js internationalization features with custom RTL styling",
      "Integrated node-cron for automated MongoDB backups",
      "Implemented global error handling and loading states",
      "Applied caching strategies and pagination for optimal performance",
    ],
    ar: [
      "تطوير بنية API قوية مع توثيق شامل",
      "تنفيذ المصادقة المستندة إلى JWT مع معالجة آمنة للكوكيز",
      "إنشاء خطافات مخصصة ومزودي سياق لإدارة الحالة",
      "استخدام ميزات التدويل في Next.js مع تنسيق RTL مخصص",
      "دمج node-cron للنسخ الاحتياطي التلقائي لـ MongoDB",
      "تنفيذ معالجة الأخطاء العالمية وحالات التحميل",
      "تطبيق استراتيجيات التخزين المؤقت والتصفح للأداء الأمثل",
    ],
  },
};
